<Window x:Class="TinyUnrealPackerExtended.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TinyUnrealPackerExtended" xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" xmlns:hc="https://handyorg.github.io/handycontrol" xmlns:local1="clr-namespace:TinyUnrealPackerExtended.ViewModels" xmlns:local2="clr-namespace:TinyUnrealPackerExtended.Convertes"
        mc:Ignorable="d"
        Title="TinyMadnessPacker"
        x:Name="RootWindow"
        Height="700" Width="750"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        Background="#F5F5F5"
        FontFamily="Bahnschrift"
        FontSize="14"
        WindowStyle="None">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <local:FileNameOnlyConverter x:Key="FileNameOnlyConverter"/>
        <local2:IsLastBreadcrumbConverter x:Key="IsLastBreadcrumbConverter"/>




        <!-- Карточка -->
        <Storyboard x:Key="DashOffsetStoryboard" RepeatBehavior="Forever">
            <DoubleAnimation
            Storyboard.TargetProperty="BorderDashOffset"
            From="0" To="8"
            Duration="0:0:1"/>
        </Storyboard>
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="24"/>
            <Setter Property="Margin" Value="24"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10" Opacity="0.15" ShadowDepth="2"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FileBorderStyle" TargetType="Border">
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10" Opacity="0.15" ShadowDepth="2"/>
                </Setter.Value>
            </Setter>
        </Style>

        <DropShadowEffect x:Key="ItemShadowEffect"
                      BlurRadius="10"
                      Opacity="0.15"
                      ShadowDepth="2"/>

        <!-- Стиль для кнопки удаления: только иконка, без бордера -->
        <Style x:Key="DeleteIconButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFF0F0F0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FFE0E0E0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BreadcrumbButtonStyle" TargetType="Button">
            <Setter Property="FontSize" Value="14"/>
            <!-- чуть больше -->
            <Setter Property="Padding" Value="8,4"/>
            <!-- увеличил паддинги -->
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Bd"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="4"
                  Padding="{TemplateBinding Padding}">
                            <ContentPresenter
              HorizontalAlignment="Center"
              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- плавный ховер -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FFF0F0F0"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#FFB0B0B0"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                      Storyboard.TargetName="Bd"
                      Storyboard.TargetProperty="Opacity"
                      From="1" To="0.8"
                      Duration="0:0:0.2"
                      AutoReverse="True"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                            <!-- нажатие -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="#FFE0E0E0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 2. Стиль для разделителя › -->
        <Style x:Key="BreadcrumbSeparatorStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="25"/>
            <!-- увеличил -->
            <Setter Property="Foreground" Value="#666"/>
            <!-- чуть потемнее -->
            <Setter Property="Margin" Value="6,0"/>
            <!-- больше пространства -->
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>


        <!-- Основная кнопка -->
        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#0f80d6"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="6,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="MinHeight" Value="44"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4">
                            <TextBlock Text="{TemplateBinding Content}"
                                       Margin="{TemplateBinding Padding}"
                                       TextWrapping="Wrap"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="14"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#0c6eb9"
                                                            Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#0f80d6"
                                                            Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#004578"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Второстепенная (плоская) кнопка -->
        <Style x:Key="SecondaryButtonStyle" TargetType="Button">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#E5E5E5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#333"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Margin" Value="6,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="MinHeight" Value="44"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <TextBlock Text="{TemplateBinding Content}"
                                       TextWrapping="Wrap"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="14"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#CCCCCC"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#AAAAAA"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TrimmedSecondaryButtonStyle"
TargetType="Button"
BasedOn="{StaticResource SecondaryButtonStyle}">
            <!-- Сбрасываем минимальную ширину, чтобы текст мог ужиматься -->
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Width" Value="Auto"/>

            <!-- Переопределяем шаблон, чтобы внутри TextBlock был тримминг -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
         Background="{TemplateBinding Background}"
         CornerRadius="4"
         Padding="{TemplateBinding Padding}">
                            <TextBlock Text="{TemplateBinding Content}"
              TextTrimming="CharacterEllipsis"
              TextWrapping="NoWrap"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              FontSize="14"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#CCCCCC"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#AAAAAA"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AnimatedDashedDropZone" TargetType="hc:DashedBorder">
            <!-- базовые визуальные установки -->
            <Setter Property="Background"    Value="White"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#CCCCCC"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderDashArray"     Value="3,1"/>
            <Setter Property="BorderDashThickness" Value="2"/>
            <Setter Property="CornerRadius"        Value="8"/>
            <Setter Property="Padding"             Value="24"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10" Opacity="0.15" ShadowDepth="2"/>
                </Setter.Value>
            </Setter>
            <!-- повесим обработчики событий напрямую -->
            <EventSetter Event="Loaded"      Handler="OnAnimatedDropZoneLoaded"/>
            <EventSetter Event="DragEnter"   Handler="OnAnimatedDropZoneDragEnter"/>
            <EventSetter Event="DragLeave"   Handler="OnAnimatedDropZoneDragLeave"/>
            <EventSetter Event="Drop"      Handler="OnAnimatedDropZoneDrop"/>


            <Style.Triggers>
                <!-- при DragEnter запускаем «бегущие» штрихи -->
                <EventTrigger RoutedEvent="DragEnter">
                    <BeginStoryboard Name="DashAnim" Storyboard="{StaticResource DashOffsetStoryboard}"/>
                </EventTrigger>
                <!-- при DragLeave останавливаем анимацию -->
                <EventTrigger RoutedEvent="DragLeave">
                    <StopStoryboard BeginStoryboardName="DashAnim"/>
                </EventTrigger>
                <!-- и при Drop (завершении перетаскивания) тоже -->
                <EventTrigger RoutedEvent="Drop">
                    <StopStoryboard BeginStoryboardName="DashAnim"/>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <!-- Шаблон строки с файлом -->
        <DataTemplate x:Key="FileItemTemplate">
            <!-- Обёртка для тени/фонового цвета -->
            <Border Style="{StaticResource FileBorderStyle}"
            Background="White"
            CornerRadius="6"
            Padding="12"
            Margin="0,8,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Иконка -->
                    <iconPacks:PackIconMaterial
                Kind="{Binding IconKind}"
                Width="24" Height="24"
                VerticalAlignment="Center"
                Grid.Column="0"/>

                    <!-- Имя файла -->
                    <TextBlock
                Text="{Binding FileName}"
                VerticalAlignment="Center"
                Margin="12,0,0,0"
                Grid.Column="1"
                FontSize="14"
                TextTrimming="CharacterEllipsis"/>

                    <!-- Кнопка удаления -->
                    <Button
                Content="✕"
                VerticalAlignment="Center"
                Width="28" Height="28"
                Command="{Binding DataContext.RemoveFileCommand,
                          RelativeSource={RelativeSource AncestorType=Window}}"
                CommandParameter="{Binding}"
                Style="{StaticResource SecondaryButtonStyle}"
                Grid.Column="2"/>
                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="AutoInjectItemTemplate">
            <Border x:Name="Bd"
          Background="White"
          CornerRadius="6"
          Padding="12"
          Margin="0,8,0,0" Style="{StaticResource FileBorderStyle}">
                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Удалить"
                  Command="{Binding DataContext.RemoveAutoInjectItemCommand, Source={x:Reference RootWindow}}"
                  CommandParameter="{Binding}"/>
                    </ContextMenu>
                </Border.ContextMenu>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <iconPacks:PackIconMaterial
          Kind="FileDocumentOutline"
          Width="24" Height="24"
          VerticalAlignment="Center"
          Grid.Column="0"/>
                    <TextBlock
          Text="{Binding Name}"
          VerticalAlignment="Center"
          Margin="12,0,0,0"
          Grid.Column="1"
          FontSize="14"
          TextTrimming="CharacterEllipsis"/>
                    <TextBlock
          Text="{Binding Status}"
          VerticalAlignment="Center"
          Margin="12,0,0,0"
          Grid.Column="2"
          FontSize="14"/>
                </Grid>
            </Border>

            <DataTemplate.Triggers>
                <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                    <Setter TargetName="Bd" Property="Background" Value="#e6f2ff"/>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <Border 
        x:Name="DragArea"
        Height="32"
        Background="Transparent"
        VerticalAlignment="Top"
        MouseDown="DragArea_MouseDown" />
        <TabControl Background="Transparent" BorderThickness="0" Margin="24">
            <!-- ===== LOCRES TOOLKIT ===== -->
            <TabItem Header="Locres Toolkit">
                <Border Style="{StaticResource CardStyle}">
                    <StackPanel Cursor="">
                        <!-- Drop Zone -->
                        <hc:DashedBorder Style="{StaticResource AnimatedDashedDropZone}"
                         AllowDrop="True"
                         DragOver="DropZone_DragOver"
                         Drop="LocresZone_Drop"
                         Height="250" BorderBrush="#CCCCCC" BorderDashArray="3, 1" BorderThickness="2">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="FileDownloadOutline" Width="50" Height="90" Foreground="#0f80d6"  HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                <TextBlock Text="Drag &amp; Drop или нажмите, чтобы загрузить"
                                           FontSize="20"
                                           Foreground="#888888"
                                           TextAlignment="Center"/>

                                <Button Content="Выбрать файл"
                                        Command="{Binding BrowseLocresInputCommand}"
                                        Style="{StaticResource SecondaryButtonStyle}"
                                        Margin="0,14,0,0"
                                        HorizontalAlignment="Center"/>
                                <TextBlock Text=".locres или .csv"
                                           FontSize="12"
                                           Foreground="#AAAAAA"
                                           TextAlignment="Center"
                                           Margin="0,6,0,0"/>
                            </StackPanel>
                        </hc:DashedBorder>

                        <hc:DashedBorder AllowDrop="True" DragOver="DropZone_DragOver" Drop="OriginalLocresZone_Drop" Height="200" Margin="0,0,0,12">
                            <hc:DashedBorder.Style>
                                <Style TargetType="hc:DashedBorder" BasedOn="{StaticResource AnimatedDashedDropZone}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsCsvFileDropped}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </hc:DashedBorder.Style>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock Text="Drag &amp; Drop или нажмите, чтобы загрузить оригинальный .locres"
                                           FontSize="16" Foreground="#888888" TextAlignment="Center"/>
                                <Button Content="Выбрать оригинальный .locres" Command="{Binding BrowseOriginalLocresCommand}" Style="{StaticResource SecondaryButtonStyle}" Margin="0,14,0,0"/>
                                <TextBlock Text=".locres" FontSize="12" Foreground="#AAAAAA" TextAlignment="Center" Margin="0,6,0,0"/>
                            </StackPanel>
                        </hc:DashedBorder>


                        <!-- Список загруженных файлов -->

                        <!-- Кнопки внизу -->
                        <Border Margin="10, 20, 10, 10" CornerRadius="6" Background="#FFF1F1F1" Height="181">
                            <Border.Style>
                                <Style TargetType="Border" BasedOn="{StaticResource FileBorderStyle}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsCsvFileDropped}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>


                                <TextBlock Text="Пусто" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsLocresFileDropped}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>

                                    </TextBlock.Style>
                                </TextBlock>

                                <ProgressBar
Margin="20,31,20,32"
                               
IsIndeterminate="True" Background="#FFD6D6D6" Foreground="#FF48AAFF">
                                    <ProgressBar.Style>
                                        <Style 
        TargetType="ProgressBar"
        BasedOn="{StaticResource ProgressBarSuccess}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsLocresBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ProgressBar.Style>
                                </ProgressBar>

                                <StackPanel Margin="10">

                                    <ItemsControl ItemsSource="{Binding LocresFiles}" ItemTemplate="{StaticResource FileItemTemplate}">
                                        <ItemsControl.Style>
                                            <Style TargetType="ItemsControl">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsLocresBusy}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ItemsControl.Style>
                                    </ItemsControl>

                                    <ItemsControl ItemsSource="{Binding OriginalLocresFiles}" ItemTemplate="{StaticResource FileItemTemplate}">
                                        <ItemsControl.Style>
                                            <Style TargetType="ItemsControl">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsLocresBusy}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ItemsControl.Style>
                                    </ItemsControl>
                                </StackPanel>

                            </Grid>
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,24,0,0">
                            <Button Content="Отмена"
                                    Command="{Binding CancelLocresCommand}"
                                    Style="{StaticResource SecondaryButtonStyle}"/>
                            <Button Content="Импорт / Экспорт"
                                    Command="{Binding ProcessLocresCommand}"
                                    Style="{StaticResource PrimaryButtonStyle}" Cursor="Hand"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </TabItem>

            <!-- ===== EXCEL TOOLKIT ===== -->
            <TabItem Header="Excel Toolkit">
                <Border Style="{StaticResource CardStyle}">
                    <StackPanel>
                        <!-- Drop Zone -->
                        <hc:DashedBorder Style="{StaticResource AnimatedDashedDropZone}"
                                AllowDrop="True"
                                DragOver="DropZone_DragOver"
                                Drop="ExcelZone_Drop" Height="330" BorderBrush="#CCCCCC" BorderDashArray="3, 1" BorderThickness="2">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="FileDownloadOutline" Width="50" Height="90" Foreground="#0f80d6"  HorizontalAlignment="Center" VerticalAlignment="Center"/>


                                <TextBlock Text="Drag &amp; Drop или нажмите, чтобы загрузить"
                                           FontSize="20"
                                           Foreground="#888888"
                                           TextAlignment="Center"/>
                                <Button Content="Выбрать файл"
                                        Command="{Binding BrowseExcelInputCommand}"
                                        Style="{StaticResource SecondaryButtonStyle}"
                                        Margin="0,14,0,0"
                                        HorizontalAlignment="Center"/>
                                <TextBlock Text=".csv или .xlsx"
                                           FontSize="12"
                                           Foreground="#AAAAAA"
                                           TextAlignment="Center"
                                           Margin="0,6,0,0"/>
                            </StackPanel>
                        </hc:DashedBorder>


                        <!-- Список загруженных файлов -->

                        <!-- Кнопки внизу -->

                        <Border Margin="10, 20, 10, 10" CornerRadius="6" Background="#FFF1F1F1" Height="100" Style="{StaticResource FileBorderStyle}">
                            <Grid>


                                <TextBlock Text="Пусто" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>

                                <ProgressBar
    Margin="20,31,20,32"
                                   
    IsIndeterminate="True" Background="#FFD6D6D6" Foreground="#FF48AAFF">
                                    <ProgressBar.Style>
                                        <Style 
            TargetType="ProgressBar"
            BasedOn="{StaticResource ProgressBarSuccess}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsExcelBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ProgressBar.Style>
                                </ProgressBar>

                                <ItemsControl ItemsSource="{Binding ExcelFiles}" ItemTemplate="{StaticResource FileItemTemplate}" Margin="10">
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsExcelBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Style>
                                </ItemsControl>

                            </Grid>
                        </Border>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,24,0,0">
                            <Button Content="Отмена"
                                    Command="{Binding CancelExcelCommand}"
                                    Style="{StaticResource SecondaryButtonStyle}"/>
                            <Button Content="Импорт"
                                    Command="{Binding ProcessExcelCommand}"
                                    Style="{StaticResource PrimaryButtonStyle}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </TabItem>

            <!-- ===== PAK TOOLKIT ===== -->
            <TabItem Header="Pak Toolkit">
                <Border Style="{StaticResource CardStyle}">
                    <StackPanel>
                        <!-- Drop Zone -->
                        <hc:DashedBorder
                Style="{StaticResource AnimatedDashedDropZone}"
                AllowDrop="True"
                DragOver="DropZone_DragOver"
                Drop="PakZone_Drop"
                Height="330" BorderBrush="#CCCCCC" BorderDashArray="3, 1" BorderThickness="2">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial
                        Kind="FolderZipOutline"
                        Width="60" Height="50"
                        Foreground="#0f80d6" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <TextBlock
                        Text="Drag &amp; Drop папку или нажмите, чтобы выбрать"
                        FontSize="20"
                        Foreground="#888888"
                        TextAlignment="Center"
                        Margin="0,12,0,0"/>
                                <Button
                        Content="Выбрать папку"
                        Command="{Binding BrowsePakFolderCommand}"
                        Style="{StaticResource SecondaryButtonStyle}"
                        Margin="0,14,0,0"
                        HorizontalAlignment="Center"/>
                            </StackPanel>
                        </hc:DashedBorder>

                        <!-- Список выбранной папки -->
                        <Border
                Margin="10,20,10,10"
                CornerRadius="6"
                Background="#FFF1F1F1"
                Height="100">
                            <Border.Style>
                                <Style TargetType="Border" BasedOn="{StaticResource FileBorderStyle}">

                                </Style>
                            </Border.Style>

                            <Grid>
                                <!-- Когда папка не выбрана -->
                                <TextBlock
                        Text="Папка не выбрана"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="20">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PakFiles.Count}" Value="0">
                                                    <!-- показываем, когда нет элементов -->
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PakFiles.Count}" Value="1">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <!-- Когда папка выбрана -->
                                <ItemsControl
                        ItemsSource="{Binding PakFiles}"
                        ItemTemplate="{StaticResource FileItemTemplate}"
                        Margin="10">
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PakFiles.Count}" Value="1">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsPakBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Style>
                                </ItemsControl>

                                <!-- Прогресс-бар -->
                                <ProgressBar
                        Margin="20,31,20,32"
                        IsIndeterminate="True"
                        Background="#FFD6D6D6"
                        Foreground="#FF48AAFF">
                                    <ProgressBar.Style>
                                        <Style TargetType="ProgressBar" BasedOn="{StaticResource ProgressBarSuccess}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPakBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ProgressBar.Style>
                                </ProgressBar>
                            </Grid>
                        </Border>

                        <!-- Кнопки -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,24,0,0">
                            <Button
                    Content="Отмена"
                    Command="{Binding CancelPakCommand}"
                    Style="{StaticResource SecondaryButtonStyle}"/>
                            <Button
                    Content="Упаковать"
                    Command="{Binding ProcessPakCommand}"
                    Style="{StaticResource PrimaryButtonStyle}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </TabItem>

            <TabItem Header="UAsset Injector">
                <Border Style="{StaticResource CardStyle}">
                    <StackPanel>

                        <!-- .uasset DROP ZONE -->
                        <hc:DashedBorder AllowDrop="True"
                       DragOver="DropZone_DragOver"
                       Drop="UassetZone_Drop"
                       Style="{StaticResource AnimatedDashedDropZone}"
                       Height="147" BorderBrush="#CCCCCC" BorderDashArray="3, 1" BorderThickness="2">
                            <Grid>
                                <!-- 1) Панель «дроп/выбор», когда нет InjectFiles -->
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasInjectFile}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <TextBlock Text="Drag &amp; Drop или нажмите, чтобы загрузить .uasset"
                       FontSize="16" Foreground="#888888" TextAlignment="Center"/>
                                    <Button Content="Выбрать .uasset"
                    Command="{Binding BrowseOriginalUassetCommand}"
                    Style="{StaticResource SecondaryButtonStyle}"
                    Margin="0,12,0,0"/>
                                </StackPanel>

                                <!-- 2) Список InjectFiles + удаление через RemoveFile -->
                                <ItemsControl ItemsSource="{Binding InjectFiles}"
              ItemTemplate="{StaticResource FileItemTemplate}"
              Margin="0">
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasInjectFile}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsInjectBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Style>
                                </ItemsControl>

                                <ProgressBar IsIndeterminate="True"
                       Height="16"
                       VerticalAlignment="Center"
                       Visibility="{Binding IsInjectBusy, Converter={StaticResource BoolToVis}}"
                       Style="{StaticResource ProgressBarSuccess}"/>
                            </Grid>
                        </hc:DashedBorder>

                        <!-- TEXTURES DROP ZONE -->
                        <hc:DashedBorder AllowDrop="True"
                       DragOver="DropZone_DragOver"
                       Drop="TextureZone_Drop"
                       Style="{StaticResource AnimatedDashedDropZone}"
                       Height="244"
                       Margin="0,12,0,0" BorderBrush="#CCCCCC" BorderDashArray="3, 1" BorderThickness="2">
                            <Grid>
                                <!-- Дроп/выбор -->
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasTextureFiles}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <TextBlock Text="Drag &amp; Drop или нажмите, чтобы загрузить текстуры"
                       FontSize="16" Foreground="#888888" TextAlignment="Center"/>
                                    <Button Content="Выбрать файл(ы)"
                    Command="{Binding BrowseTextureCommand}"
                    Style="{StaticResource SecondaryButtonStyle}"
                    Margin="0,12,0,0"/>
                                </StackPanel>

                                <!-- Список TextureFiles + удаление -->
                                <ItemsControl ItemsSource="{Binding TextureFiles}"
              ItemTemplate="{StaticResource FileItemTemplate}"
              Margin="0">
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasTextureFiles}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding IsInjectBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Style>
                                </ItemsControl>

                                <ProgressBar IsIndeterminate="True"
                       Height="16"
                       VerticalAlignment="Center"
                       Visibility="{Binding IsInjectBusy, Converter={StaticResource BoolToVis}}"
                       Style="{StaticResource ProgressBarSuccess}"/>
                            </Grid>
                        </hc:DashedBorder>

                        <!-- OUTPUT FOLDER -->

                        <StackPanel Orientation="Horizontal" Margin="0,12,0,0">

                            <Button
    Command="{Binding BrowseInjectOutputCommand}"
    Style="{StaticResource TrimmedSecondaryButtonStyle}"
    Margin="0,0,0,0"
    MaxWidth="607"
    Padding="12,8"
    Content="{Binding InjectOutputButtonText}" Width="606" />
                        </StackPanel>

                        <!-- ACTION BUTTONS -->
                        <StackPanel Orientation="Horizontal"
                  HorizontalAlignment="Right"
                  Margin="0,24,0,0">
                            <Button Content="Отмена"
                Command="{Binding CancelInjectCommand}"
                Style="{StaticResource SecondaryButtonStyle}"
                Visibility="{Binding HasInjectFile, Converter={StaticResource BoolToVis}}"/>
                            <Button Content="Инжект"
                Command="{Binding ProcessInjectCommand}"
                Style="{StaticResource PrimaryButtonStyle}"
                Margin="6,0,0,0"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </TabItem>

            <TabItem Header="Auto Injector">
                <Border Style="{StaticResource CardStyle}">
                    <StackPanel>

                        <hc:DashedBorder x:Name="AutoZone"
                       AllowDrop="True"
                       DragOver="AutoZone_DragOver"
                       Drop="AutoZone_Drop"
                       Style="{StaticResource AnimatedDashedDropZone}"
                       Height="200"
                       BorderBrush="#CCCCCC"
                       BorderDashArray="3,1"
                       BorderThickness="2">
                            <Grid>
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <!-- Экранирование амперсанда -->
                                    <TextBlock Text="Drag &amp; Drop .uasset + .png файлы, чтобы загрузить"
                       FontSize="16"
                       Foreground="#888888"
                       TextAlignment="Center"/>
                                    <TextBlock Text="(файлы будут сгруппированы по имени)"
                       FontSize="12"
                       Foreground="#aaaaaa"
                       TextAlignment="Center"/>
                                    <Button Content="Выбрать файлы"
                    Command="{Binding BrowseAutoFilesCommand}"
                    Style="{StaticResource SecondaryButtonStyle}"
                    Margin="0,12,0,0"/>
                                </StackPanel>
                            </Grid>
                        </hc:DashedBorder>


                            <Button Content="{Binding AutoInjectOutputButtonText}"
              Command="{Binding BrowseAutoOutputCommand}"
              Style="{StaticResource TrimmedSecondaryButtonStyle}" MinWidth="100" Width="Auto" Margin="0, 20, 0, 20"/>

                        <!-- Кнопка запуска автоматического инжекта -->

                        <Border Height="184" Margin="0, 0, 0, 0" Style="{StaticResource CardStyle}">
                            <Grid Margin="-12,-14,-12,-14">

                                <ScrollViewer
            VerticalScrollBarVisibility="Auto"
            HorizontalScrollBarVisibility="Disabled"
            Margin="0,0,0,0">
                                    <ItemsControl
                ItemsSource="{Binding AutoInjectItems}"
                ItemTemplate="{StaticResource AutoInjectItemTemplate}"
                Margin="10"/>
                                </ScrollViewer>
                                <TextBlock
Text="Пусто"
HorizontalAlignment="Center"
VerticalAlignment="Center"
FontSize="20">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasAutoInjectItems}" Value="True">
                                                    <!-- показываем, когда нет элементов -->
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <StackPanel Orientation="Horizontal"
                  HorizontalAlignment="Right"
                  Margin="0,15,0,0">
                            <Button Content="Start Auto Inject"
                Command="{Binding ProcessAutoInjectCommand}"
                Style="{StaticResource PrimaryButtonStyle}"/>
                        </StackPanel>

                    </StackPanel>
                </Border>
            </TabItem>

            <TabItem Header="Folder Editor">
                <Border Style="{StaticResource CardStyle}" Padding="12">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- Breadcrumbs -->
                            <RowDefinition Height="50"/>
                            <!-- Toolbar -->
                            <RowDefinition Height="*"/>
                            <!-- TreeView + ScrollViewer -->
                        </Grid.RowDefinitions>
                        <ItemsControl 
    Grid.Row="1"
    ItemsSource="{Binding DisplayBreadcrumbs}"
    Margin="0,0,0,8">
                            <!-- горизонтальный StackPanel -->
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">

                                        <!-- обычная крошка -->
                                        <Button x:Name="BtnNormal"
                Style="{StaticResource BreadcrumbButtonStyle}"
                Content="{Binding Name}"
                Command="{Binding DataContext.NavigateToBreadcrumbCommand, ElementName=RootWindow}"
                CommandParameter="{Binding FullPath}"/>

                                        <!-- overflow-кнопка -->
                                        <Button x:Name="BtnOverflow"
                Style="{StaticResource BreadcrumbButtonStyle}"
                Content="…"
                Visibility="Collapsed" Tag="{Binding DataContext, ElementName=RootWindow}">
                                            <Button.ContextMenu>
                                                <ContextMenu
      DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
      ItemsSource="{Binding Overflow}">

                                                    <ContextMenu.ItemContainerStyle>
                                                        <Style TargetType="MenuItem">
                                                            <Setter Property="Header" Value="{Binding Name}"/>

                                                            <Setter Property="Command"
                  Value="{Binding DataContext.NavigateToBreadcrumbCommand,
                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>

                                                            <Setter Property="CommandParameter" Value="{Binding FullPath}"/>
                                                        </Style>
                                                    </ContextMenu.ItemContainerStyle>

                                                </ContextMenu>
                                            </Button.ContextMenu>
                                        </Button>

                                        <!-- разделитель -->
                                        <TextBlock Text="›"
                   Style="{StaticResource BreadcrumbSeparatorStyle}">
                                            <TextBlock.Visibility>
                                                <MultiBinding Converter="{StaticResource IsLastBreadcrumbConverter}">
                                                    <Binding Path="."/>
                                                    <Binding Path="ItemsSource" RelativeSource="{RelativeSource AncestorType=ItemsControl}"/>
                                                </MultiBinding>
                                            </TextBlock.Visibility>
                                        </TextBlock>
                                    </StackPanel>

                                    <!-- триггеры, чтобы переключать видимость кнопок -->
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsOverflow}" Value="True">
                                            <Setter TargetName="BtnNormal" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="BtnOverflow" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsOverflow}" Value="False">
                                            <Setter TargetName="BtnNormal" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="BtnOverflow" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <ToolBar Band="0" BandIndex="0" Margin="0,0,0,8">
                            <Button Content="New Folder"
                Command="{Binding AddFolderToFolderCommand}"
                Style="{StaticResource SecondaryButtonStyle}" />
                            <Button Content="Rename"
                Command="{Binding RenameFolderItemCommand}"
                CommandParameter="{Binding SelectedFolderItem}"
                Style="{StaticResource SecondaryButtonStyle}"
                IsEnabled="{Binding SelectedFolderItem, Converter={StaticResource BoolToVis}}" />
                            <Button Content="Delete"
                Command="{Binding RemoveFolderItemCommand}"
                CommandParameter="{Binding SelectedFolderItem}"
                Style="{StaticResource SecondaryButtonStyle}"
                IsEnabled="{Binding SelectedFolderItem, Converter={StaticResource BoolToVis}}" />
                            <Button Content="Refresh"
                Command="{Binding RefreshFolderCommand}"
                Style="{StaticResource SecondaryButtonStyle}" />
                        </ToolBar>

                        <ScrollViewer Grid.Row="2"
                    VerticalScrollBarVisibility="Auto"
                    HorizontalScrollBarVisibility="Disabled">

                            <!-- даём TreeView имя -->
                            <TreeView x:Name="FolderTree"
              ItemsSource="{Binding FolderItems}" Background="#FFE8E8E8" SelectedItemChanged="FolderTree_SelectedItemChanged">

                                <TreeView.Resources>
                                    <!-- Отключаем стандартные подсветки -->
                                    <SolidColorBrush 
          x:Key="{x:Static SystemColors.HighlightBrushKey}"
          Color="Transparent"/>
                                    <SolidColorBrush 
          x:Key="{x:Static SystemColors.ControlBrushKey}"
          Color="Transparent"/>
                                    <SolidColorBrush 
          x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
          Color="White"/>

                                    <!-- Шаблон для каждого узла -->
                                    <HierarchicalDataTemplate
            DataType="{x:Type local1:FolderItem}"
            ItemsSource="{Binding Children}">

                                        <!-- Всегда-видимый скруглённый Border с тенью -->
                                        <Border x:Name="Bd"
                  Background="White"
                  BorderBrush="#E5E5E5"
                  BorderThickness="1"
                  CornerRadius="6"
                  Padding="8"
                  Margin="0,4"
                  MinHeight="36"
                  Effect="{StaticResource ItemShadowEffect}" PreviewMouseLeftButtonDown="FolderItem_PreviewMouseLeftButtonDown">

                                            <!-- Контекстное меню с правильными биндингами -->
                                            <Border.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem
      Header="Открыть расположение"
      Command="{Binding DataContext.OpenFolderCommand, Source={x:Reference RootWindow}}"
      CommandParameter="{Binding}" />

                                                    <Separator/>

                                                    <!-- Копировать / Вырезать / Вставить -->
                                                    <MenuItem
      Header="Копировать"
      Command="{Binding DataContext.CopyFolderItemCommand, Source={x:Reference RootWindow}}"
      CommandParameter="{Binding}" />
                                                    <MenuItem
      Header="Вырезать"
      Command="{Binding DataContext.CutFolderItemCommand, Source={x:Reference RootWindow}}"
      CommandParameter="{Binding}" />
                                                    <MenuItem
      Header="Вставить"
      Command="{Binding DataContext.PasteIntoFolderCommand, Source={x:Reference RootWindow}}"
      CommandParameter="{Binding}"
      IsEnabled="{Binding DataContext.CanPaste, Source={x:Reference RootWindow}}"/>

                                                    <Separator/>

                                                    <!-- Переименовать / Удалить -->
                                                    <MenuItem
      Header="Переименовать"
      Command="{Binding DataContext.RenameFolderItemCommand, Source={x:Reference RootWindow}}"
      CommandParameter="{Binding}" />
                                                    <MenuItem
      Header="Удалить"
      Command="{Binding DataContext.RemoveFolderItemCommand, Source={x:Reference RootWindow}}"
      CommandParameter="{Binding}" />

                                                    <Separator/>

                                                    <!-- Свойства -->
                                                    <MenuItem
      Header="Свойства"
      Command="{Binding DataContext.ShowPropertiesCommand, Source={x:Reference RootWindow}}"
      CommandParameter="{Binding}" />
                                                </ContextMenu>
                                            </Border.ContextMenu>

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <!-- Иконка -->
                                                <iconPacks:PackIconMaterial
                x:Name="ItemIcon"
                Kind="{Binding IconKind}"
                Width="20" Height="20"
                VerticalAlignment="Center"
                Margin="4,0"/>

                                                <!-- Текст -->
                                                <TextBlock
                x:Name="ItemName"
                Grid.Column="1"
                Text="{Binding Name}"
                FontSize="14"
                VerticalAlignment="Center"
                Margin="8,0"/>

                                                <!-- Кнопка удаления -->
                                                <Button Grid.Column="2"
                      Command="{Binding DataContext.RemoveFolderItemCommand, ElementName=FolderTree}"
                      CommandParameter="{Binding}"
                      Style="{StaticResource DeleteIconButtonStyle}"
                      ToolTip="Удалить">
                                                    <iconPacks:PackIconMaterial
                  x:Name="DeleteIcon"
                  Kind="Close"
                  Width="16" Height="16"
                  Foreground="#888888"/>
                                                </Button>
                                            </Grid>
                                        </Border>

                                        <!-- Hover/Selected через триггеры на самом Border -->
                                        <HierarchicalDataTemplate.Triggers>
                                            <Trigger SourceName="Bd"
                     Property="IsMouseOver"
                     Value="True">
                                                <Setter TargetName="Bd"
                      Property="Background"
                      Value="#e6f2ff"/>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding IsSelected,
                              RelativeSource={RelativeSource AncestorType=TreeViewItem}}"
                         Value="True">
                                                <Setter TargetName="Bd"         Property="Background"  Value="#0f80d6"/>
                                                <Setter TargetName="Bd"         Property="BorderBrush" Value="#0f80d6"/>
                                                <Setter TargetName="ItemIcon"   Property="Foreground"  Value="White"/>
                                                <Setter TargetName="ItemName"   Property="Foreground"  Value="White"/>
                                                <Setter TargetName="DeleteIcon" Property="Foreground"  Value="White"/>
                                            </DataTrigger>
                                        </HierarchicalDataTemplate.Triggers>
                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>

                                <TreeView.InputBindings>
                                    <KeyBinding Gesture="Delete"
              Command="{Binding RemoveFolderItemCommand}"
              CommandParameter="{Binding SelectedItem, ElementName=FolderTree}" />

                                    <KeyBinding Gesture="F2"
              Command="{Binding RenameFolderItemCommand}"
              CommandParameter="{Binding SelectedItem, ElementName=FolderTree}" />

                                    <KeyBinding Gesture="Ctrl+C"
              Command="{Binding CopyFolderItemCommand}"
              CommandParameter="{Binding SelectedItem, ElementName=FolderTree}" />

                                    <KeyBinding Gesture="Ctrl+X"
              Command="{Binding CutFolderItemCommand}"
              CommandParameter="{Binding SelectedItem, ElementName=FolderTree}" />

                                    <KeyBinding Gesture="Ctrl+V"
              Command="{Binding PasteIntoFolderCommand}"
              CommandParameter="{Binding SelectedItem, ElementName=FolderTree}" Key="V" />
                                </TreeView.InputBindings>

                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="TreeViewItem">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                        <Setter Property="AllowDrop" Value="True"/>
                                        <EventSetter Event="DragOver" Handler="FolderItem_DragOver"/>
                                        <EventSetter Event="Drop"     Handler="FolderItem_Drop"/>
                                        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="FolderItem_PreviewMouseLeftButtonDown"/>
                                        <EventSetter Event="MouseMove" Handler="FolderItem_MouseMove"/>

                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TreeView.ItemContainerStyle>
                            </TreeView>
                        </ScrollViewer>
                    </Grid>
                </Border>
            </TabItem>
        </TabControl>

        <Button
        Width="37" Height="32"
        HorizontalAlignment="Right"
        VerticalAlignment="Top"
        Margin="0,12,12,0"
        Background="Transparent"
        BorderThickness="0"
        Cursor="Hand"
        Click="Button_Click">
            <iconPacks:PackIconMaterial
            Kind="Close"
            Width="16" Height="16"
            Foreground="#333"/>
        </Button>

        <Grid Visibility="Visible"> <!--ПоменятЬ!-->
            <Canvas x:Name="GrowlContainer" IsHitTestVisible="True" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="10, 75, 10, 10" />
        </Grid>
    </Grid>
</Window>
