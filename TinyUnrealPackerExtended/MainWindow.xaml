<Window x:Class="TinyUnrealPackerExtended.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:behaviors="clr-namespace:TinyUnrealPackerExtended.Behaviors"
        xmlns:local="clr-namespace:TinyUnrealPackerExtended" xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:local1="clr-namespace:TinyUnrealPackerExtended.ViewModels" xmlns:local2="clr-namespace:TinyUnrealPackerExtended.Converters"
        mc:Ignorable="d"
        Title="TinyMadnessPacker"
        x:Name="RootWindow"
        Height="750" Width="800"
        MinHeight="750" MinWidth="800"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResize"
        Background="#F5F5F5"
        AllowsTransparency="True"
        FontFamily="Bahnschrift"
        FontSize="14"
        WindowStyle="None">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <local2:IsLastBreadcrumbConverter x:Key="IsLastBreadcrumbConverter"/>
        <local2:NullToVisibilityConverter x:Key="NullToVis"/>

        <Style x:Key="ListViewItemWithMenuWithDoubleClick"
       TargetType="ListViewItem"
       BasedOn="{StaticResource ListViewItemWithMenu}">
            <EventSetter Event="MouseDoubleClick"
               Handler="ListViewItem_MouseDoubleClick"/>
        </Style>


        <Style x:Key="AnimatedDashedDropZone" TargetType="hc:DashedBorder">
            <!-- базовые визуальные установки -->
            <Setter Property="Background"    Value="White"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#CCCCCC"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderDashArray"     Value="3,1"/>
            <Setter Property="BorderDashThickness" Value="2"/>
            <Setter Property="CornerRadius"        Value="8"/>
            <Setter Property="Padding"             Value="24"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10" Opacity="0.15" ShadowDepth="2"/>
                </Setter.Value>
            </Setter>
            <!-- повесим обработчики событий напрямую -->
            <EventSetter Event="Loaded"      Handler="OnAnimatedDropZoneLoaded"/>
            <EventSetter Event="DragEnter"   Handler="OnAnimatedDropZoneDragEnter"/>
            <EventSetter Event="DragLeave"   Handler="OnAnimatedDropZoneDragLeave"/>
            <EventSetter Event="Drop"      Handler="OnAnimatedDropZoneDrop"/>


            <Style.Triggers>
                <!-- при DragEnter запускаем «бегущие» штрихи -->
                <EventTrigger RoutedEvent="DragEnter">
                    <BeginStoryboard Name="DashAnim" Storyboard="{StaticResource DashOffsetStoryboard}"/>
                </EventTrigger>
                <!-- при DragLeave останавливаем анимацию -->
                <EventTrigger RoutedEvent="DragLeave">
                    <StopStoryboard BeginStoryboardName="DashAnim"/>
                </EventTrigger>
                <!-- и при Drop (завершении перетаскивания) тоже -->
                <EventTrigger RoutedEvent="Drop">
                    <StopStoryboard BeginStoryboardName="DashAnim"/>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <!-- Шаблон строки с файлом -->
        <DataTemplate x:Key="FileItemTemplate">
            <!-- Обёртка для тени/фонового цвета -->
            <Border Style="{StaticResource FileBorderStyle}"
            Background="White"
            CornerRadius="6"
            Padding="12"
            Margin="0,8,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Иконка -->
                    <iconPacks:PackIconMaterial
                Kind="{Binding IconKind}"
                Width="24" Height="24"
                VerticalAlignment="Center"
                Grid.Column="0"/>

                    <!-- Имя файла -->
                    <TextBlock
                Text="{Binding FileName}"
                VerticalAlignment="Center"
                Margin="12,0,0,0"
                Grid.Column="1"
                FontSize="14"
                TextTrimming="CharacterEllipsis"/>

                    <!-- Кнопка удаления -->
                    <Button
                Content="✕"
                VerticalAlignment="Center"
                Width="28" Height="28"
                Command="{Binding DataContext.RemoveFileCommand,
                                  RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                CommandParameter="{Binding}"
                Style="{StaticResource SecondaryButtonStyle}"
                Grid.Column="2"/>
                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="AutoInjectItemTemplate">
            <Border x:Name="Bd"
          Background="White"
          CornerRadius="6"
          Padding="12"
          Margin="0,8,0,0" Style="{StaticResource FileBorderStyle}">
                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Удалить"
                            Command="{Binding DataContext.RemoveAutoInjectItemCommand,
                                    Source={x:Reference AutoInjectItemsControl}}"
                            CommandParameter="{Binding}" />
                    </ContextMenu>
                </Border.ContextMenu>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <iconPacks:PackIconMaterial
          Kind="FileDocumentOutline"
          Width="24" Height="24"
          VerticalAlignment="Center"
          Grid.Column="0"/>
                    <TextBlock
          Text="{Binding Name}"
          VerticalAlignment="Center"
          Margin="12,0,0,0"
          Grid.Column="1"
          FontSize="14"
          TextTrimming="CharacterEllipsis"/>
                    <TextBlock
          Text="{Binding Status}"
          VerticalAlignment="Center"
          Margin="12,0,0,0"
          Grid.Column="2"
          FontSize="14"/>
                </Grid>
            </Border>

            <DataTemplate.Triggers>
                <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                    <Setter TargetName="Bd" Property="Background" Value="#e6f2ff"/>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>


    </Window.Resources>

    <Grid>
        <Border 
        x:Name="DragArea"
        Height="32"
        Background="Transparent"
        VerticalAlignment="Top"
        MouseDown="DragArea_MouseDown" />
        <TabControl Background="Transparent" BorderThickness="0" Margin="24"     VerticalContentAlignment="Stretch"
    HorizontalContentAlignment="Stretch">
            <!-- ===== LOCRES TOOLKIT ===== -->
            <TabItem Header="Locres Toolkit" DataContext="{Binding LocresVM}">
                <Border Style="{StaticResource CardStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="250"/>

                            <RowDefinition MinHeight="180" Height="*" MaxHeight="180"/>



                            <!-- 4) Кнопки внизу: по содержимому -->
                            <RowDefinition Height="60"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!-- Drop Zone -->
                        <hc:DashedBorder Style="{StaticResource AnimatedDashedDropZone}"
                                         
                          BorderBrush="#CCCCCC" BorderDashArray="3, 1" BorderThickness="2" VerticalAlignment="Stretch" Cursor="" Grid.Row="0">
                            <i:Interaction.Behaviors>
                                <behaviors:FileDropBehavior
          FileDropCommand="{Binding DropLocresFilesCommand}"/>
                            </i:Interaction.Behaviors>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="FileDownloadOutline" Width="50" Height="90" Foreground="#0f80d6"  HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                <TextBlock Text="Drag &amp; Drop или нажмите, чтобы загрузить"
                                           FontSize="20"
                                           Foreground="#888888"
                                           TextAlignment="Center"/>

                                <Button Content="Выбрать файл"
                                        Command="{Binding BrowseLocresInputCommand}"
                                        Style="{StaticResource SecondaryButtonStyle}"
                                        Margin="0,14,0,0"
                                        HorizontalAlignment="Center"/>
                                <TextBlock Text=".locres или .csv"
                                           FontSize="12"
                                           Foreground="#AAAAAA"
                                           TextAlignment="Center"
                                           Margin="0,6,0,0"/>
                            </StackPanel>
                        </hc:DashedBorder>

                        <hc:DashedBorder Margin="10, 20, 10, 10" Grid.Row="1">
                            <i:Interaction.Behaviors>
                                <behaviors:FileDropBehavior
          FileDropCommand="{Binding DropOriginalLocresFilesCommand}"/>
                            </i:Interaction.Behaviors>
                            <hc:DashedBorder.Style>
                                <Style TargetType="hc:DashedBorder" BasedOn="{StaticResource AnimatedDashedDropZone}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsCsvFileDropped}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </hc:DashedBorder.Style>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock Text="Drag &amp; Drop или нажмите, чтобы загрузить оригинальный .locres"
                                           FontSize="16" Foreground="#888888" TextAlignment="Center"/>
                                <Button Content="Выбрать оригинальный .locres" Command="{Binding BrowseOriginalLocresCommand}" Style="{StaticResource SecondaryButtonStyle}" Margin="0,14,0,0"/>
                                <TextBlock Text=".locres" FontSize="12" Foreground="#AAAAAA" TextAlignment="Center" Margin="0,6,0,0"/>
                            </StackPanel>
                        </hc:DashedBorder>


                        <!-- Список загруженных файлов -->

                        <!-- Кнопки внизу -->
                        <Border Margin="10, 20, 10, 10" CornerRadius="6" Background="#FFF1F1F1" Grid.Row="1">
                            <Border.Style>
                                <Style TargetType="Border" BasedOn="{StaticResource FileBorderStyle}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsCsvFileDropped}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>


                                <TextBlock Text="Пусто" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsLocresFileDropped}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>

                                    </TextBlock.Style>
                                </TextBlock>

                                <ProgressBar
Margin="20,31,20,32"
                               
IsIndeterminate="True" Background="#FFD6D6D6" Foreground="#FF48AAFF">
                                    <ProgressBar.Style>
                                        <Style 
        TargetType="ProgressBar"
        BasedOn="{StaticResource ProgressBarSuccess}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsLocresBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ProgressBar.Style>
                                </ProgressBar>

                                <StackPanel Margin="10">

                                    <ItemsControl ItemsSource="{Binding LocresFiles}" ItemTemplate="{StaticResource FileItemTemplate}">
                                        <ItemsControl.Style>
                                            <Style TargetType="ItemsControl">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsLocresBusy}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ItemsControl.Style>
                                    </ItemsControl>

                                    <ItemsControl ItemsSource="{Binding OriginalLocresFiles}" ItemTemplate="{StaticResource FileItemTemplate}">
                                        <ItemsControl.Style>
                                            <Style TargetType="ItemsControl">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsLocresBusy}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ItemsControl.Style>
                                    </ItemsControl>
                                </StackPanel>

                            </Grid>
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Row="2">
                            <Button Content="Отмена"
                                    Command="{Binding CancelLocresCommand}"
                                    Style="{StaticResource SecondaryButtonStyle}" Cursor="Hand"/>
                            <Button Content="Импорт / Экспорт"
                                    Command="{Binding ProcessLocresCommand}"
                                    Style="{StaticResource PrimaryButtonStyle}" Cursor="Hand"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </TabItem>

            <!-- ===== EXCEL TOOLKIT ===== -->
            <TabItem Header="Excel Toolkit" DataContext="{Binding ExcelVM}">
                <Border Style="{StaticResource CardStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="250"/>

                            <RowDefinition MinHeight="130" Height="*" MaxHeight="130"/>


                            <RowDefinition Height="60"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!-- Drop Zone -->
                        <hc:DashedBorder Style="{StaticResource AnimatedDashedDropZone}" BorderBrush="#CCCCCC" BorderDashArray="3, 1" BorderThickness="2" Grid.Row="0">
                            <i:Interaction.Behaviors>
                                <behaviors:FileDropBehavior
        FileDropCommand="{Binding DropExcelFilesCommand}"/>
                            </i:Interaction.Behaviors>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="FileDownloadOutline" Width="50" Height="90" Foreground="#0f80d6"  HorizontalAlignment="Center" VerticalAlignment="Center"/>


                                <TextBlock Text="Drag &amp; Drop или нажмите, чтобы загрузить"
                                           FontSize="20"
                                           Foreground="#888888"
                                           TextAlignment="Center"/>
                                <Button Content="Выбрать файл"
                                        Command="{Binding BrowseExcelInputCommand}"
                                        Style="{StaticResource SecondaryButtonStyle}"
                                        Margin="0,14,0,0"
                                        HorizontalAlignment="Center"/>
                                <TextBlock Text=".csv или .xlsx"
                                           FontSize="12"
                                           Foreground="#AAAAAA"
                                           TextAlignment="Center"
                                           Margin="0,6,0,0"/>
                            </StackPanel>
                        </hc:DashedBorder>


                        <!-- Список загруженных файлов -->

                        <!-- Кнопки внизу -->

                        <Border Margin="10, 20, 10, 10" CornerRadius="6" Background="#FFF1F1F1" Style="{StaticResource FileBorderStyle}" Grid.Row="1">
                            <Grid>


                                <TextBlock Text="Пусто" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>

                                <ProgressBar
    Margin="20,31,20,32"
                                   
    IsIndeterminate="True" Background="#FFD6D6D6" Foreground="#FF48AAFF">
                                    <ProgressBar.Style>
                                        <Style 
            TargetType="ProgressBar"
            BasedOn="{StaticResource ProgressBarSuccess}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsExcelBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ProgressBar.Style>
                                </ProgressBar>

                                <ItemsControl ItemsSource="{Binding ExcelFiles}" ItemTemplate="{StaticResource FileItemTemplate}" Margin="10">
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsExcelBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Style>
                                </ItemsControl>

                            </Grid>
                        </Border>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="2" VerticalAlignment="Bottom">
                            <Button Content="Отмена"
                                    Command="{Binding CancelExcelCommand}"
                                    Style="{StaticResource SecondaryButtonStyle}"/>
                            <Button Content="Импорт"
                                    Command="{Binding ProcessExcelCommand}"
                                    Style="{StaticResource PrimaryButtonStyle}"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </TabItem>

            <!-- ===== PAK TOOLKIT ===== -->
            <TabItem Header="Pak Toolkit" DataContext="{Binding PakVM}">
                <Border Style="{StaticResource CardStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="250"/>

                            <RowDefinition MinHeight="130" Height="*" MaxHeight="130"/>


                            <RowDefinition Height="60"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!-- Drop Zone -->
                        <hc:DashedBorder
                Style="{StaticResource AnimatedDashedDropZone}" BorderBrush="#CCCCCC" BorderDashArray="3, 1" BorderThickness="2" Grid.Row="0">
                            <i:Interaction.Behaviors>
                                <behaviors:FileDropBehavior
          FileDropCommand="{Binding DropPakFolderCommand}"/>
                            </i:Interaction.Behaviors>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial
                        Kind="FolderZipOutline"
                        Width="60" Height="50"
                        Foreground="#0f80d6" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <TextBlock
                        Text="Drag &amp; Drop папку или нажмите, чтобы выбрать"
                        FontSize="20"
                        Foreground="#888888"
                        TextAlignment="Center"
                        Margin="0,12,0,0"/>
                                <Button
                        Content="Выбрать папку"
                        Command="{Binding BrowsePakFolderCommand}"
                        Style="{StaticResource SecondaryButtonStyle}"
                        Margin="0,14,0,0"
                        HorizontalAlignment="Center"/>
                            </StackPanel>
                        </hc:DashedBorder>

                        <!-- Список выбранной папки -->
                        <Border
                Margin="10,20,10,10"
                CornerRadius="6"
                Background="#FFF1F1F1" Grid.Row="1">
                            <Border.Style>
                                <Style TargetType="Border" BasedOn="{StaticResource FileBorderStyle}">

                                </Style>
                            </Border.Style>

                            <Grid>
                                <!-- Когда папка не выбрана -->
                                <TextBlock
                        Text="Папка не выбрана"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="20">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PakFiles.Count}" Value="0">
                                                    <!-- показываем, когда нет элементов -->
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PakFiles.Count}" Value="1">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <!-- Когда папка выбрана -->
                                <ItemsControl
                        ItemsSource="{Binding PakFiles}"
                        ItemTemplate="{StaticResource FileItemTemplate}"
                        Margin="10">
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PakFiles.Count}" Value="1">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsPakBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Style>
                                </ItemsControl>

                                <!-- Прогресс-бар -->
                                <ProgressBar
                        Margin="20,31,20,32"
                        IsIndeterminate="True"
                        Background="#FFD6D6D6"
                        Foreground="#FF48AAFF">
                                    <ProgressBar.Style>
                                        <Style TargetType="ProgressBar" BasedOn="{StaticResource ProgressBarSuccess}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPakBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ProgressBar.Style>
                                </ProgressBar>
                            </Grid>
                        </Border>

                        <!-- Кнопки -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="2" VerticalAlignment="Bottom">
                            <Button
        Content="Отмена"
        Command="{Binding CancelPakCommand}"
        Style="{StaticResource SecondaryButtonStyle}"/>

                            <Button
        Content="Упаковать (compress)"
        Command="{Binding ProcessPakCompressedCommand}"
        Style="{StaticResource PrimaryButtonStyle}"
        Margin="6,0,0,0"/>
                            <Button
        Content="Упаковать"
        Command="{Binding ProcessPakCommand}"
        Style="{StaticResource PrimaryButtonStyle}"
        Margin="6,0,0,0"/>

                        </StackPanel>
                    </Grid>
                </Border>
            </TabItem>

            <TabItem Header="UAsset Injector">
                <Border Style="{StaticResource CardStyle}" DataContext="{Binding UassetInjectorVM}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="130"/>

                            <RowDefinition MinHeight="130"/>

                            <RowDefinition Height="20"/>

                            <RowDefinition Height="50"/>


                            <RowDefinition Height="60"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- .uasset DROP ZONE -->
                        <hc:DashedBorder
                       Style="{StaticResource AnimatedDashedDropZone}" BorderBrush="#CCCCCC" BorderDashArray="3, 1" BorderThickness="2" Grid.Row="0">
                            <i:Interaction.Behaviors>
                                <behaviors:FileDropBehavior FileDropCommand="{Binding DropUassetFilesCommand}"/>
                            </i:Interaction.Behaviors>
                            <Grid>
                                <!-- 1) Панель «дроп/выбор», когда нет InjectFiles -->
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasInjectFile}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <TextBlock Text="Drag &amp; Drop или нажмите, чтобы загрузить .uasset"
                       FontSize="16" Foreground="#888888" TextAlignment="Center"/>
                                    <Button Content="Выбрать .uasset"
                    Command="{Binding BrowseOriginalUassetCommand}"
                    Style="{StaticResource SecondaryButtonStyle}"
                    Margin="0,12,0,0"/>
                                </StackPanel>

                                <!-- 2) Список InjectFiles + удаление через RemoveFile -->
                                <ItemsControl ItemsSource="{Binding InjectFiles}"
              ItemTemplate="{StaticResource FileItemTemplate}"
              Margin="0">
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasInjectFile}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsInjectBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Style>
                                </ItemsControl>

                                <ProgressBar IsIndeterminate="True"
                       Height="16"
                       VerticalAlignment="Center"
                       Visibility="{Binding IsInjectBusy, Converter={StaticResource BoolToVis}}"
                       Style="{StaticResource ProgressBarSuccess}"/>
                            </Grid>
                        </hc:DashedBorder>

                        <!-- TEXTURES DROP ZONE -->
                        <hc:DashedBorder
                       Style="{StaticResource AnimatedDashedDropZone}"
                       Margin="0,12,0,0" BorderBrush="#CCCCCC" BorderDashArray="3, 1" BorderThickness="2" Grid.Row="1">
                            <i:Interaction.Behaviors>
                                <behaviors:FileDropBehavior FileDropCommand="{Binding DropTextureFilesCommand}"/>
                            </i:Interaction.Behaviors>
                            <Grid>
                                <!-- Дроп/выбор -->
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasTextureFiles}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <TextBlock Text="Drag &amp; Drop или нажмите, чтобы загрузить текстуры"
                       FontSize="16" Foreground="#888888" TextAlignment="Center"/>
                                    <Button Content="Выбрать файл(ы)"
                    Command="{Binding BrowseTextureCommand}"
                    Style="{StaticResource SecondaryButtonStyle}"
                    Margin="0,12,0,0"/>
                                </StackPanel>

                                <!-- Список TextureFiles + удаление -->
                                <ItemsControl ItemsSource="{Binding TextureFiles}"
              ItemTemplate="{StaticResource FileItemTemplate}"
              Margin="0">
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasTextureFiles}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding IsInjectBusy}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Style>
                                </ItemsControl>

                                <ProgressBar IsIndeterminate="True"
                       Height="16"
                       VerticalAlignment="Center"
                       Visibility="{Binding IsInjectBusy, Converter={StaticResource BoolToVis}}"
                       Style="{StaticResource ProgressBarSuccess}"/>
                            </Grid>
                        </hc:DashedBorder>

                        <!-- OUTPUT FOLDER -->


                        <Button
    Command="{Binding BrowseInjectOutputCommand}"
    Style="{StaticResource TrimmedSecondaryButtonStyle}"
    Padding="12,8"
    Content="{Binding InjectOutputButtonText}" MinWidth="640" Width="Auto" Grid.Row="3" Margin="0,0,0,0" />

                        <!-- ACTION BUTTONS -->
                        <StackPanel Orientation="Horizontal"
                  HorizontalAlignment="Right" Grid.Row="4" VerticalAlignment="Bottom">
                            <Button Content="Отмена"
                Command="{Binding CancelInjectCommand}"
                Style="{StaticResource SecondaryButtonStyle}"
                Visibility="{Binding HasInjectFile, Converter={StaticResource BoolToVis}}"/>
                            <Button Content="Инжект"
                Command="{Binding ProcessInjectCommand}"
                Style="{StaticResource PrimaryButtonStyle}"
                Margin="6,0,0,0"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </TabItem>

            <TabItem Header="Auto Injector">
                <Border Style="{StaticResource CardStyle}" DataContext="{Binding AutoInjectVM}">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="130"/>

                            <RowDefinition Height="15"/>

                            <RowDefinition Height="50"/>

                            <RowDefinition Height="15"/>


                            <RowDefinition MinHeight="130" MaxHeight="250"/>




                            <RowDefinition Height="60"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <hc:DashedBorder x:Name="AutoZone"
                       Style="{StaticResource AnimatedDashedDropZone}"
                       BorderBrush="#CCCCCC"
                       BorderDashArray="3,1"
                       BorderThickness="2" Grid.Row="0">
                            <i:Interaction.Behaviors>
                                <behaviors:FileDropBehavior FileDropCommand="{Binding DropAutoFilesCommand}"/>
                            </i:Interaction.Behaviors>
                            <Grid>
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <!-- Экранирование амперсанда -->
                                    <TextBlock Text="Drag &amp; Drop .uasset + .png файлы, чтобы загрузить"
                       FontSize="16"
                       Foreground="#888888"
                       TextAlignment="Center"/>
                                    <TextBlock Text="(файлы будут сгруппированы по имени)"
                       FontSize="12"
                       Foreground="#aaaaaa"
                       TextAlignment="Center"/>
                                    <Button Content="Выбрать файлы"
                    Command="{Binding BrowseAutoFilesCommand}"
                    Style="{StaticResource SecondaryButtonStyle}"
                    Margin="0,12,0,0"/>
                                </StackPanel>
                            </Grid>
                        </hc:DashedBorder>


                        <Button Content="{Binding AutoInjectOutputButtonText}"
              Command="{Binding BrowseAutoOutputCommand}"
              Style="{StaticResource TrimmedSecondaryButtonStyle}" MinWidth="640" Width="Auto" Grid.Row="2" VerticalAlignment="Stretch"/>

                        <!-- Кнопка запуска автоматического инжекта -->

                        <Border Margin="0, 0, 0, 0" Style="{StaticResource CardStyle}" Grid.Row="4">
                            <Grid Margin="-12,-14,-12,-14">

                                <ScrollViewer
            VerticalScrollBarVisibility="Auto"
            HorizontalScrollBarVisibility="Disabled"
            Margin="0,0,0,0">
                                    <ItemsControl x:Name="AutoInjectItemsControl"
                ItemsSource="{Binding AutoInjectItems}"
                ItemTemplate="{StaticResource AutoInjectItemTemplate}"
                Margin="10"/>
                                </ScrollViewer>
                                <TextBlock
Text="Пусто"
HorizontalAlignment="Center"
VerticalAlignment="Center"
FontSize="20">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasAutoInjectItems}" Value="True">
                                                    <!-- показываем, когда нет элементов -->
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <StackPanel Orientation="Horizontal"
                  HorizontalAlignment="Right"
                  Margin="0,15,0,0" Grid.Row="5" VerticalAlignment="Bottom">
                            <Button Content="Start Auto Inject"
                Command="{Binding ProcessAutoInjectCommand}"
                Style="{StaticResource PrimaryButtonStyle}"/>
                        </StackPanel>

                    </Grid>
                </Border>
            </TabItem>

            <TabItem Header="Folder Editor" IsEnabled="{Binding CanEditFolderEditor}" DataContext="{Binding FolderEditorVM}">
                <Border Style="{StaticResource CardStyle}" Padding="12">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="300"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- Toolbar -->
                            <RowDefinition Height="50"/>
                            <!-- Breadcrumbs -->
                            <RowDefinition Height="*"/>
                            <!-- Content: TreeView + Details -->
                            <!-- Preview -->
                        </Grid.RowDefinitions>

                        <!-- Toolbar -->
                        <Border
    Background="#FFECECEC"
    Padding="4"
    Margin="0,0,0,8"
    CornerRadius="4" Grid.Row="0" Grid.ColumnSpan="2">
                            <DockPanel LastChildFill="False" HorizontalAlignment="Stretch" Cursor="">

                                <!-- Навигация слева -->
                                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" Margin="0,0,8,0">
                                    <Button Click="Back_Click"
              IsEnabled="{Binding CanGoBack}"
              Style="{StaticResource NavigationButtonStyle}"
              ToolTip="Назад">
                                        <iconPacks:PackIconMaterial Kind="ArrowLeft" Width="16" Height="16"/>
                                    </Button>
                                    <Button Click="Forward_Click"
              IsEnabled="{Binding CanGoForward}"
              Style="{StaticResource NavigationButtonStyle}"
              ToolTip="Вперед">
                                        <iconPacks:PackIconMaterial Kind="ArrowRight" Width="16" Height="16"/>
                                    </Button>
                                    <Border Width="1" CornerRadius="1"
              Background="#CCCCCC"
              Margin="8,0"
              VerticalAlignment="Stretch"/>
                                    <Button Command="{Binding RefreshFolderCommand}"
              Style="{StaticResource NavigationButtonStyle}"
              ToolTip="Перезагрузить">
                                        <iconPacks:PackIconMaterial Kind="Refresh" Width="16" Height="16"/>
                                    </Button>
                                </StackPanel>

                                <!-- Поиск справа -->
                                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                                    <TextBox
          x:Name="SearchBox"
          Style="{StaticResource SearchTextBoxStyle}"
          KeyDown="SearchBox_KeyDown" />
                                    <Button
          x:Name="SearchButton"
          Style="{StaticResource NavigationButtonStyle}"
          ToolTip="Искать"
          Click="SearchButton_Click"
          Margin="4,0,0,0">
                                        <iconPacks:PackIconMaterial Kind="Magnify" Width="16" Height="16"/>
                                    </Button>
                                </StackPanel>

                                <!-- Центр (LastChildFill) можно оставить пустым или добавить дополнительные элементы -->

                            </DockPanel>
                        </Border>


                        <!-- Breadcrumbs -->
                        <ScrollViewer Grid.Row="1" Grid.ColumnSpan="2"
                    HorizontalScrollBarVisibility="Auto"
                    VerticalScrollBarVisibility="Disabled"
                    ClipToBounds="True"
                    Margin="0,0,0,8">
                            <ItemsControl x:Name="BreadcrumbsControl"
                      ItemsSource="{Binding DisplayBreadcrumbs}">
                                <i:Interaction.Behaviors>
                                    <behaviors:BreadcrumbOverflowBehavior/>
                                </i:Interaction.Behaviors>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                            <Button x:Name="BtnNormal"
                        Style="{StaticResource BreadcrumbButtonStyle}"
                        Content="{Binding Name}"
                        Command="{Binding DataContext.FolderEditorVM.NavigateToCommand, ElementName=RootWindow}"
                        CommandParameter="{Binding FullPath}"/>
                                            <Button x:Name="BtnOverflow"
                        Style="{StaticResource BreadcrumbButtonStyle}"
                        Content="…"
                        Visibility="Collapsed"
                        Tag="{Binding DataContext.FolderEditorVM, ElementName=RootWindow}">
                                                <Button.ContextMenu>
                                                    <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                                 ItemsSource="{Binding Overflow}">
                                                        <ContextMenu.ItemContainerStyle>
                                                            <Style TargetType="MenuItem">
                                                                <Setter Property="Header" Value="{Binding Name}"/>
                                                                <Setter Property="Command"
                                  Value="{Binding DataContext.NavigateToCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                                <Setter Property="CommandParameter" Value="{Binding FullPath}"/>
                                                            </Style>
                                                        </ContextMenu.ItemContainerStyle>
                                                    </ContextMenu>
                                                </Button.ContextMenu>
                                            </Button>
                                            <TextBlock Text="›" Style="{StaticResource BreadcrumbSeparatorStyle}">
                                                <TextBlock.Visibility>
                                                    <MultiBinding Converter="{StaticResource IsLastBreadcrumbConverter}">
                                                        <Binding Path="."/>
                                                        <Binding Path="ItemsSource" ElementName="BreadcrumbsControl"/>
                                                    </MultiBinding>
                                                </TextBlock.Visibility>
                                            </TextBlock>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsOverflow}" Value="True">
                                                <Setter TargetName="BtnNormal" Property="Visibility" Value="Collapsed"/>
                                                <Setter TargetName="BtnOverflow" Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsOverflow}" Value="False">
                                                <Setter TargetName="BtnNormal" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="BtnOverflow" Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>

                        <!-- Левый столбец: TreeView -->
                        <ScrollViewer Grid.Row="2" Grid.Column="0"
                    VerticalScrollBarVisibility="Auto"
                    HorizontalScrollBarVisibility="Disabled"
                    x:Name="FolderTreeScrollViewer">
                            <TreeView x:Name="FolderTree"
                  ItemsSource="{Binding FolderItems}"
                  SelectedItemChanged="FolderTree_SelectedItemChanged"
                  ScrollViewer.CanContentScroll="True"
    VirtualizingStackPanel.IsVirtualizing="True"
    VirtualizingStackPanel.VirtualizationMode="Recycling"
    VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
    VirtualizingStackPanel.CacheLength="2"
                  Background="#FFE8E8E8" PreviewMouseWheel="FolderTree_PreviewMouseWheel">

                                <TreeView.Resources>
                                    <!-- Отключаем стандартные подсветки -->
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"/>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="White"/>

                                    <!-- Шаблон узла -->
                                    <HierarchicalDataTemplate DataType="{x:Type local1:FolderItem}"
                                      ItemsSource="{Binding Children}">
                                        <!-- Обёртка для тени/фонового цвета -->
                                        <Border x:Name="Bd"
                      Background="White"
                      BorderBrush="#E5E5E5"
                      BorderThickness="1"
                      CornerRadius="6"
                      Padding="8"
                      Margin="0,4"
                      MinHeight="36"
                      Effect="{StaticResource ItemShadowEffect}"
                      PreviewMouseLeftButtonDown="FolderItem_PreviewMouseLeftButtonDown">

                                            <!-- Контекстное меню -->
                                            <Border.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Открыть расположение"
                                                   Command="{Binding DataContext.FolderEditorVM.OpenFolderCommand, Source={x:Reference RootWindow}}"
                              CommandParameter="{Binding}"/>
                                                    <Separator/>
                                                    <MenuItem Header="Копировать"
                              Command="{Binding DataContext.FolderEditorVM.CopyFolderItemCommand, Source={x:Reference RootWindow}}"
                              CommandParameter="{Binding}"/>
                                                    <MenuItem Header="Вырезать"
                              Command="{Binding DataContext.FolderEditorVM.CutFolderItemCommand, Source={x:Reference RootWindow}}"
                              CommandParameter="{Binding}"/>
                                                    <MenuItem Header="Вставить"
                              Command="{Binding DataContext.FolderEditorVM.PasteIntoFolderCommand, Source={x:Reference RootWindow}}"
                              CommandParameter="{Binding}"
                              IsEnabled="{Binding DataContext.FolderEditorVM.CanPaste, Source={x:Reference RootWindow}}"/>
                                                    <Separator/>
                                                    <MenuItem Header="Переименовать"
                              Command="{Binding DataContext.FolderEditorVM.RenameFolderItemCommand, Source={x:Reference RootWindow}}"
                              CommandParameter="{Binding}"/>
                                                    <MenuItem Header="Удалить"
                              Command="{Binding DataContext.FolderEditorVM.RemoveFolderItemCommand, Source={x:Reference RootWindow}}"
                              CommandParameter="{Binding}"/>
                                                    <Separator/>
                                                    <MenuItem Header="Свойства"
                              Command="{Binding DataContext.FolderEditorVM.ShowPropertiesCommand, Source={x:Reference RootWindow}}"
                              CommandParameter="{Binding}"/>
                                                </ContextMenu>
                                            </Border.ContextMenu>

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <!-- Иконка -->
                                                <iconPacks:PackIconMaterial x:Name="ItemIcon"
                                              Kind="{Binding IconKind}"
                                              Width="20" Height="20"
                                              VerticalAlignment="Center"
                                              Margin="4,0"/>

                                                <!-- Название -->
                                                <TextBlock x:Name="ItemName"
                             Grid.Column="1"
                             Text="{Binding Name}"
                             FontSize="14"
                             VerticalAlignment="Center"
                             Margin="8,0"/>

                                                <!-- Кнопка удаления -->
                                                <Button Grid.Column="2"
                          Command="{Binding DataContext.RemoveFolderItemCommand, ElementName=FolderTree}"
                          CommandParameter="{Binding}"
                          Style="{StaticResource DeleteIconButtonStyle}"
                          ToolTip="Удалить">
                                                    <iconPacks:PackIconMaterial x:Name="DeleteIcon"
                                                Kind="Close"
                                                Width="16" Height="16"
                                                Foreground="#888888"/>
                                                </Button>
                                            </Grid>
                                        </Border>

                                        <HierarchicalDataTemplate.Triggers>
                                            <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Bd" Property="Background" Value="#e6f2ff"/>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TreeViewItem}}"
                             Value="True">
                                                <Setter TargetName="Bd" Property="Background" Value="#0f80d6"/>
                                                <Setter TargetName="Bd" Property="BorderBrush" Value="#0f80d6"/>
                                                <Setter TargetName="ItemIcon" Property="Foreground" Value="White"/>
                                                <Setter TargetName="ItemName" Property="Foreground" Value="White"/>
                                                <Setter TargetName="DeleteIcon" Property="Foreground" Value="White"/>
                                            </DataTrigger>
                                        </HierarchicalDataTemplate.Triggers>
                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>

                                <TreeView.InputBindings>
                                    <!-- Удалить -->
                                    <KeyBinding Key="Delete"
 Command="{Binding DataContext.FolderEditorVM.RemoveFolderItemCommand,
                                  ElementName=RootWindow}"
                CommandParameter="{Binding SelectedItem, ElementName=FolderTree}" />

                                    <!-- Переименовать -->
                                    <KeyBinding Key="F2"
                Command="{Binding DataContext.FolderEditorVM.RenameFolderItemCommand, ElementName=RootWindow}"
                CommandParameter="{Binding SelectedItem, ElementName=FolderTree}" />

                                    <!-- Копировать -->
                                    <KeyBinding Gesture="Ctrl+C"
                Command="{Binding DataContext.FolderEditorVM.CopyFolderItemCommand, ElementName=RootWindow}"
                CommandParameter="{Binding SelectedItem, ElementName=FolderTree}" />

                                    <!-- Вырезать -->
                                    <KeyBinding Gesture="Ctrl+X"
                Command="{Binding DataContext.FolderEditorVM.CutFolderItemCommand, ElementName=RootWindow}"
                CommandParameter="{Binding SelectedItem, ElementName=FolderTree}" />

                                    <!-- Вставить -->
                                    <KeyBinding Key="V" Gesture="Ctrl+V"
                Command="{Binding DataContext.FolderEditorVM.PasteIntoFolderCommand, ElementName=RootWindow}"
                CommandParameter="{Binding SelectedItem, ElementName=FolderTree}" />
                                </TreeView.InputBindings>
                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="TreeViewItem">
                                        <!-- ваши старые сеттеры/эвенты -->
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="4, 0, 0, 0"/>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                        <Setter Property="AllowDrop" Value="True"/>
                                        <EventSetter Event="DragOver" Handler="FolderItem_DragOver"/>
                                        <EventSetter Event="Drop" Handler="FolderItem_Drop"/>
                                        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="FolderItem_PreviewMouseLeftButtonDown"/>
                                        <EventSetter Event="MouseMove" Handler="FolderItem_MouseMove"/>

                                        <!-- 2. Подмена шаблона с нашей стрелкой + фиксом Border -->
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="TreeViewItem">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <!-- наша стрелка-экспандер -->
                                                        <ToggleButton 
                x:Name="Expander"
                Style="{StaticResource ExpanderToggleStyle}"
                Grid.Row="0" Grid.Column="0"
                IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                Visibility="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVis}}"/>

                                                        <!-- заголовок узла: теперь не растягивается -->
                                                        <Border 
                x:Name="Bd"
                Grid.Row="0" Grid.Column="1"
                Padding="2"
                Background="{TemplateBinding Background}"
                HorizontalAlignment="Left">
                                                            <ContentPresenter 
                  x:Name="PART_Header"
                  ContentSource="Header"
                  RecognizesAccessKey="True"/>
                                                        </Border>

                                                        <!-- контейнер для дочерних элементов -->
                                                        <ItemsPresenter 
                x:Name="ItemsHost"
                Grid.Row="1" Grid.Column="1"
                Margin="12,0,0,0"
                Visibility="Collapsed"/>
                                                    </Grid>

                                                    <ControlTemplate.Triggers>
                                                        <!-- показываем детей при IsExpanded -->
                                                        <Trigger Property="IsExpanded" Value="True">
                                                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                                                        </Trigger>
                                                        <!-- ваш триггер выделения -->
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter TargetName="Bd" Property="Background" Value="Transparent"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>

                                        <!-- ваш старый триггер на IsSelected -->
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TreeView.ItemContainerStyle>
                            </TreeView>
                        </ScrollViewer>




                        <!-- Правый столбец: Details ListView -->
                        <Grid Grid.Row="2" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <!-- 2) Тонкий сплиттер для перетаскивания -->
                                <RowDefinition Height="5"/>
                                <!-- 3) Область превью по умолчанию -->
                                <RowDefinition MaxHeight="600" MinHeight="200"/>
                            </Grid.RowDefinitions>
                            
                            
                            <ListView Grid.Row="0" Grid.RowSpan="3" Grid.Column="1"
                             AllowDrop="True"
                             DragOver="ListView_DragOver"
                             Drop="ListView_Drop"
          ItemsSource="{Binding SelectedFolderItem.Children}"
                                                VirtualizingPanel.IsVirtualizing="True"
          VirtualizingPanel.VirtualizationMode="Recycling"
          VirtualizingPanel.IsVirtualizingWhenGrouping="True"
          SnapsToDevicePixels="True"
                                      ItemContainerStyle="{StaticResource ListViewItemWithMenuWithDoubleClick}">
                                <!-- Существующий GridView -->
                                <ListView.View>
                                    <GridView>
                                        <!-- Имя + иконка -->
                                        <GridViewColumn Header="Name" Width="270">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <iconPacks:PackIconMaterial
                Kind="{Binding IconKind}"
                Width="16" Height="16"
                Margin="0,0,8,0"/>
                                                        <TextBlock Text="{Binding Name}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <!-- Дата изменения -->
                                        <GridViewColumn Header="Date Modified"
                      Width="150"
                      DisplayMemberBinding="{Binding DateModified}"/>

                                        <!-- Размер -->
                                        <GridViewColumn Header="Size"
                      Width="100"
                      DisplayMemberBinding="{Binding Size}"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>

                            <GridSplitter
    Grid.Row="1"
    HorizontalAlignment="Stretch"
    VerticalAlignment="Center"
    Height="5"
    Background="Transparent"
    Cursor="SizeNS"
    Style="{StaticResource SmoothGridSplitterStyle}"
    Visibility="{Binding SelectedTexturePreview, Converter={StaticResource NullToVis}}"
    ShowsPreview="False"/>

                            <Border
    VerticalAlignment="Stretch"
    HorizontalAlignment="Stretch"
    Margin="5, 0, 5, 5"
    Style="{StaticResource CardStyle}"
    CornerRadius="4"
    MinHeight="200"
    Padding="4"
    Grid.Row="2"
    Visibility="{Binding SelectedTexturePreview, Converter={StaticResource NullToVis}}"
    Panel.ZIndex="1">
                                <Grid>
                                    <!-- Само изображение -->
                                    <Image
            Source="{Binding SelectedTexturePreview}"
            Stretch="Uniform"
            StretchDirection="DownOnly"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            SnapsToDevicePixels="True">
                                        <Image.ContextMenu>
                                            <!-- контекстное меню наследует DataContext окна (MainWindowViewModel) -->
                                            <ContextMenu>
                                                <!-- Открыть в проводнике -->
                                                <MenuItem
        Header="Открыть в проводнике"
        Command="{Binding PlacementTarget.DataContext.OpenInExplorerCommand,
                          RelativeSource={RelativeSource AncestorType=ContextMenu}}"
        CommandParameter="{Binding PlacementTarget.DataContext.SelectedFolderItem.FullPath,
                                   RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                <!-- Скопировать путь -->
                                                <MenuItem
        Header="Скопировать путь"
        Command="{Binding PlacementTarget.DataContext.CopyPathCommand,
                          RelativeSource={RelativeSource AncestorType=ContextMenu}}"
        CommandParameter="{Binding PlacementTarget.DataContext.SelectedFolderItem.FullPath,
                                   RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                <!-- Сохранить как… -->
                                                <MenuItem
        Header="Сохранить как…"
        Command="{Binding PlacementTarget.DataContext.SaveTextureFromUassetCommand,
                          RelativeSource={RelativeSource AncestorType=ContextMenu}}"
        CommandParameter="{Binding PlacementTarget.DataContext.SelectedFolderItem.FullPath,
                                   RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                            </ContextMenu>
                                        </Image.ContextMenu>
                                    </Image>

                                    <Button
            Command="{Binding ClearTexturePreviewCommand}"
            Style="{StaticResource DeleteIconButtonStyle}"
            Width="20" Height="20"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Margin="0,0,0,0"
            ToolTip="Закрыть превью">
                                        <iconPacks:PackIconMaterial
                Kind="Close"
                Width="15" Height="15"
                Foreground="#333" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Button>
                                </Grid>
                            </Border>

                        </Grid>
                    </Grid>
                </Border>
            </TabItem>
        </TabControl>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
            
        <Button
        Width="37" Height="32"
        HorizontalAlignment="Right"
        VerticalAlignment="Top"
        Margin="0,12,0,0"
        Command="{Binding MinimizeWindowCommand}"
        Background="Transparent"
        BorderThickness="0"
        Cursor="Hand" >
            <iconPacks:PackIconMaterial
            Kind="WindowMinimize"
            Width="16" Height="16"
            Foreground="#333"/>
        </Button>

            <Button
        Width="37" Height="32"
        HorizontalAlignment="Right"
        VerticalAlignment="Top"
        Margin="0,12,0,0"
        Command="{Binding MaximizeWindowCommand}"
        Background="Transparent"
        BorderThickness="0"
        Cursor="Hand" >
                <iconPacks:PackIconMaterial
            Kind="Fullscreen"
            Width="16" Height="16"
            Foreground="#333"/>
            </Button>

            <Button
Width="37" Height="32"
HorizontalAlignment="Right"
VerticalAlignment="Top"
Margin="0,12,12,0"
Background="Transparent"
BorderThickness="0"
Cursor="Hand"
Click="Button_Click">
                <iconPacks:PackIconMaterial
    Kind="Close"
    Width="16" Height="16"
    Foreground="#333"/>
            </Button>
        </StackPanel>

        <Grid Visibility="Visible">
            <!--ПоменятЬ!-->
            <Canvas x:Name="GrowlContainer" IsHitTestVisible="True" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="10, 75, 10, 10" />
        </Grid>
    </Grid>
</Window>
